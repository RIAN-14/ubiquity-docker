version: "3.8"
services:
  php:
    build:
      context: './php/'
      args:
        - PHP_VERSION=${PHP_VERSION:-8.0}-fpm
    networks:
      - backend
    volumes:
      - ./projects/:/var/www/html/
  apache:
    build:
      context: './apache/'
      args:
        - APACHE_VERSION=${APACHE_VERSION:-2.4.53}-alpine
    depends_on:
      - php
    networks:
      - frontend
      - backend
    ports:
      - "8080:80"
    volumes:
      - ./projects/:/var/www/html/
  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    depends_on:
      - php
    ports:
        - "8080:80"
    volumes:
      - ./projects/:/var/www/html/
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - frontend
      - backend
    profiles: ["nginx"]
  swoole:
    build:
      context: './swoole/'
      args:
        - SWOOLE_VERSION=${SWOOLE_VERSION:-latest}
    depends_on:
      - php
      - mysql
    restart: always
    ports:
      - "8095:8095"
    volumes:
      - ./projects/:/var/www/html/
    networks:
      - frontend
      - backend
    profiles: ["swoole"]
  mysql:
    image: mysql:${MYSQL_VERSION:-8.0}
    volumes:
    - ./mysql/db:/var/lib/mysql:rw
    - ./mysql/sql:/docker-entrypoint-initdb.d/:rw
    networks:
      - backend
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    profiles: ["mysql"]
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
        - '8099:80'
    restart: always
    environment:
        PMA_HOST: mysql
    depends_on:
        - mysql
    networks:
      - backend
    profiles: ["mysql"]
  postgres :
    image: postgres:${POSTGRES_VERSION:-12.4}
    volumes:
    - pgdata:/var/lib/postgresql/data
    - ./postgres/sql:/docker-entrypoint-initdb.d/:rw
    networks:
      - backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - PGDATA=/work/data
    profiles: ["postgres"]
networks:
  frontend:
  backend:
volumes:
  pgdata: {}
